var LivePersonVirtualAssistantModule=(function(){var _version='2.2.0';var _config={COUNTRY_CODE_LOCATION:'cstatus',USING_PROXY_BUTTON:!0,TRIGGER_CHAT_BUTTON_FROM_BUSY_STATE:!1,TRIGGER_CHAT_BUTTON_FROM_OFFLINE_STATE:!1,SEND_FAQ_CONVERSATION_AS_PRECHAT_LINES:!0,PRECHAT_LINES_INTRO_MESSAGE_ENABLED:!0,EMBEDDED_BUTTON_ID_LOADED:null,EMBEDDED_BUTTON_TYPE:5,EMBEDDED_BUTTON_INFO:null,ENGAGEMENT_NAME_SHORTCODE:':vap:',EMBEDDED_BUTTON_DIV_CONTAINER_ID:'lpButtonDiv-need-help-panel',WINDOW_CLOSE_BUTTON_CLASS:'lp_close',NAMESPACE:'LP_VA_PANEL_MODULE',EVENTS:{BUTTON_IMPRESSION:'EMBEDDED_BUTTON_IMPRESSION',SHOW:'SHOULD_SHOW_VA_PANEL',HIDE:'SHOULD_HIDE_VA_PANEL',BUTTON_TO_DISPLAY:'SHOULD_SHOW_BUTTON_CONTENT',CLOSE_THANKYOU_WINDOW:'DID_CLOSE_THANKYOU_WINDOW'}};var _supportedLanguages=['en','fr','zh_hans','zh','zh_cn','zh_tw','ar','bm','es','es_mx','en_us'];var _abandonedChatEvents=['waiting','preChat','chatting','postChat'];var _translations={'default':{'intro':'Your conversation history so far ...','suffix':'An Agent will be with you shortly ...'},'en':{'intro':'Your conversation history so far ...','suffix':'An Agent will be with you shortly ...'},'en_us':{'intro':'Your conversation history so far ...','suffix':'An Agent will be with you shortly ...'},'es_mx':{'intro':'Su historial de conversaciones hasta la fecha...','suffix':''},'fr':{'intro':'Votre historique de conversations jusqu\'à présent...','suffix':'Un agent vous répondra bientôt...'},'zh':{'intro':'很快将会有座席代表与您聊天...','suffix':'很快将会有座席代表与您聊天...'},'zh_cn':{'intro':'很快将会有座席代表与您聊天...','suffix':'很快将会有座席代表与您聊天...'},'zh_tw':{'intro':'您目前的對談記錄...','suffix':'服務人員很快會與您聯絡...'},'zh_hans':{'intro':'','suffix':'Dentro de poco un agente estará con usted...'},'ar':{'intro':'','suffix':''},'bm':{'intro':'','suffix':''},'es':{'intro':'','suffix':''}};var BUTTON_STATES={'ONLINE':1,'OFFLINE':2,'BUSY':4,'UNKNOWN':0};var BUTTON_STATE_DESCRIPTIONS={1:'ONLINE',2:'OFFLINE',4:'BUSY',0:'UNKNOWN',};var _eventBindingsDone=!1;var _eventLog=[];function _log(name,event){_eventLog.push({'name':name,'info':event,'timestamp':Date.now()})}
function checkIfButtonImpressionIsForVaPanel(e){var _regexCheckEngagementName=new RegExp(_config.ENGAGEMENT_NAME_SHORTCODE,'g');if(e.engagementType==_config.EMBEDDED_BUTTON_TYPE&&_regexCheckEngagementName.test(e.engagementName))
{_config.EMBEDDED_BUTTON_ID_LOADED=e.engagementId;var eventData={id:e.engagementId,name:e.engagementName,cid:e.campaignId,state:e.state};lpTag.events.trigger(_config.NAMESPACE,_config.EVENTS.BUTTON_IMPRESSION,eventData);_log(_config.EVENTS.BUTTON_IMPRESSION,eventData)}}
function showTheLivePersonButtonInsideVaPanel(eventData){_config.EMBEDDED_BUTTON_INFO=eventData;if(_config.USING_PROXY_BUTTON){var buttonStateKeys=Object.keys(BUTTON_STATES);var data={'reason':'VA PANEL related button impression event detected - show the button content on the page based on the attached eventData.state property','state':eventData.state,'status':BUTTON_STATE_DESCRIPTIONS[eventData.state],'state_descriptions':BUTTON_STATE_DESCRIPTIONS,'state_enums':BUTTON_STATES};_triggerEvent(_config.EVENTS.BUTTON_TO_DISPLAY,data)}}
function getActiveButton(){return _config.EMBEDDED_BUTTON_INFO}
function chatWindowIsActive(){var _windowEvents=lpTag.events.hasFired('lpUnifiedWindow','state');if(_windowEvents.length>0){return!0}else{return!1}}
function _triggerEvent(name,data){lpTag.events.trigger(_config.NAMESPACE,name,data);_log(name,data)}
function _reset(){_eventLog=[];_eventBindingsDone=!1;_config.EMBEDDED_BUTTON_INFO=null}
function _init(){if(lpTag&&lpTag.events&&lpTag.events.hasFired){if(chatWindowIsActive()){_triggerEvent(_config.EVENTS.HIDE,{'reason':'panel should be hidden because chatWindowIsActive returned TRUE'})}}
if(_eventBindingsDone===!1){bindToChatEvents();addSurveyHooks();_eventBindingsDone=!0}else{_log('EVENT_BINDINGS_DONE',{'eventBindingsDone':_eventBindingsDone})}}
function checkWindowStatus(element){var lpChatWindowEvents=lpTag.events.hasFired('lpUnifiedWindow','conversationInfo');_log('checkWindowStatus',{'lpChatWindowEvents':lpChatWindowEvents});var lastEvent=lpChatWindowEvents[lpChatWindowEvents.length-1];var previousEvent=lpChatWindowEvents[lpChatWindowEvents.length-2]||null;_log('previousEvent_and_lastEvent',{'previousEvent':previousEvent,'lastEvent':lastEvent});if(lastEvent.data.state&&_abandonedChatEvents.indexOf(lastEvent.data.state)>-1){_triggerEvent(_config.EVENTS.SHOW,{'reason':'visitor abandonded without submitting prechat survey / or connecting to agent / or did not submit post chat survey...show panel','lastEvent':lastEvent})}
if(lastEvent.data.state&&lastEvent.data.state=='ended'&&previousEvent.data.state&&_abandonedChatEvents.indexOf(previousEvent.data.state)>-1){_triggerEvent(_config.EVENTS.SHOW,{'reason':'lastEvent == ended AND previousEvent = preChat/waiting/chatting/ => showPanel + closeThankyouWindow','lastEvent':lastEvent,'previousEvent':previousEvent});closeThankyouWindow()}
if(lastEvent.data.state=='postChat'){_log('closeThankyouWindow',{'lastEvent':lastEvent});closeThankyouWindow()}}
function _handleBeforeSurveySubmitHook(options){_log('BEFORE_SUBMIT_SURVEY',{'options':options});var reason=null;var eventData={'options.data.surveyType':options.data.surveyType,'options.data.surveyData':options.data.surveyData,'reason':reason};if(options.data.surveyType=='preChatSurvey'&&options.data.surveyData===null){eventData.reason='BEFORE_SUBMIT_SURVEY // preChatSurvey / no surveyData so closing thank you window and showing panel';_triggerEvent(_config.EVENTS.SHOW,eventData);closeThankyouWindow()}
if(options.data.surveyType=='postChatSurvey'){eventData.reason='BEFORE_SUBMIT_SURVEY // postChatSurvey / closing thank you window and showing panel';_triggerEvent(_config.EVENTS.SHOW,eventData);closeThankyouWindow()}
return options}
function addSurveyHooks(){console.log('==> addSurveyHooks');var _waitForHooks=setInterval(function(){console.log('==> _waitForHooks');var _waitForHooksCounter=0;if(lpTag&&lpTag.hooks&&lpTag.hooks){console.log('==> hooks found!');clearInterval(_waitForHooks);lpTag.hooks.push({name:'BEFORE_SUBMIT_SURVEY',callback:_handleBeforeSurveySubmitHook})}else if(_waitForHooksCounter>10){_log('clearInterval/_waitForHooksCounter',{'_waitForHooksCounter':_waitForHooksCounter});clearInterval(_waitForHooks)}},200)}
function bindToChatEvents(){if(lpTag&&lpTag.events&&lpTag.events.bind){_log('bindToChatEvents',{});lpTag.events.bind('lpUnifiedWindow','state',function(eventData,d){if(eventData.state=='preChat'||eventData.state=='waiting'||eventData.state=='resume'||eventData.state=='interactive'||eventData.state=='postChat'){_triggerEvent(_config.EVENTS.HIDE,{'eventData.state':eventData.state,'reason':'lpUnifiedWindow State = '+eventData.state})}});lpTag.events.bind('lpUnifiedWindow','conversationInfo',function(eventData,appName){if(eventData.state=='preChat'||eventData.state=='resume'){var matches=document.getElementsByClassName(_config.WINDOW_CLOSE_BUTTON_CLASS);for(var i=0;i<matches.length;i++){matches[i].addEventListener('click',checkWindowStatus,!0)}}
if(eventData.state=='applicationEnded'){closeThankyouWindow();_triggerEvent(_config.EVENTS.SHOW,{'eventData.state':eventData.state,'reason':'lpUnifiedWindow conversationInfo  '+eventData.state+' event fired = post chat survey has been submitted'})}
if(eventData.state=='ended'){checkWindowStatus()}});lpTag.events.bind('LP_OFFERS','OFFER_IMPRESSION',checkIfButtonImpressionIsForVaPanel);lpTag.events.bind(_config.NAMESPACE,_config.EVENTS.BUTTON_IMPRESSION,showTheLivePersonButtonInsideVaPanel)}}
function triggerChatButtonClick(faqHistorySoFar){var clicked;if(lpTag&&lpTag.taglets&&lpTag.taglets.rendererStub){if(_config.SEND_FAQ_CONVERSATION_AS_PRECHAT_LINES&&faqHistorySoFar.length>0){var currentLanguage=getCurrentLanguageSelection();var translations=isSupportedLanguage(currentLanguage)?getLanguageTranslations(currentLanguage):null;var preChatLinesArray=[];if(translations&&translations.intro){preChatLinesArray.push(translations.intro)}else{console.log('[LP VA Module] ==> unsupported language OR no INTRO translations found for current languages : ',currentLanguage)}
preChatLinesArray=preChatLinesArray.concat(faqHistorySoFar);if(translations&&translations.suffix){preChatLinesArray.push(translations.suffix)}else{console.log('[LP VA Module] ==> unsupported language OR no SUFFIX translations found for current languages : ',currentLanguage)}
if(preChatLinesArray.length>0){clicked=lpTag.taglets.rendererStub.click(_config.EMBEDDED_BUTTON_INFO.id,{preChatLines:preChatLinesArray})}else{clicked=lpTag.taglets.rendererStub.click(_config.EMBEDDED_BUTTON_INFO.id)}}else{clicked=lpTag.taglets.rendererStub.click(_config.EMBEDDED_BUTTON_INFO.id)}}}
function isSupportedLanguage(lang){var supportedLanguage=!1;if(_supportedLanguages.indexOf(lang)>-1){supportedLanguage=!0}
console.log('[LP VA MODULE] => isSupportedLanguage ? ',lang,supportedLanguage);return supportedLanguage}
function getCountrySelection(){var sdesAdded=lpTag.events.hasFired("lp_sdes","VAR_ADDED");var countryCode=null;if(!sdesAdded){return null}
for(let sdeAddedEvent=0;sdeAddedEvent<sdesAdded.length;sdeAddedEvent++){var event=sdesAdded[sdeAddedEvent];if(event.data.type==='ctmrinfo'){if(event.data&&event.data.info){var customerInfo=event.data.info;countryCode=customerInfo[_config.COUNTRY_CODE_LOCATION]||null}}}
return countryCode}
function getCurrentLanguageSelection(){var foundSupportedLanguage=!1;var currentLanguageSelection=null;var sdesAdded=lpTag.events.hasFired("lp_sdes","VAR_ADDED");if(!sdesAdded){return null}
for(let sdeAddedEvent=0;sdeAddedEvent<sdesAdded.length;sdeAddedEvent++){var event=sdesAdded[sdeAddedEvent];if(event.data.type==='cart'){var cartItems=(event.data.products&&event.data.products.length&&event.data.products.length>0)||!1;if(cartItems){for(let i=0;i<event.data.products.length;i++){var possibleLanguageSelection=event.data.products[i].product.name||null;if(isSupportedLanguage(possibleLanguageSelection)){currentLanguageSelection=possibleLanguageSelection;foundSupportedLanguage=!0;console.log('[LP VA Module] ==> getCurrentLanguageSelection : foundSupportedLanguage // ',currentLanguageSelection);break}}}}}
return currentLanguageSelection}
function getLanguageTranslations(language){return _translations[language]||null}
function closeThankyouWindow(){var closeBtn=document.querySelector('.lp_close');if(closeBtn){closeBtn.click();_triggerEvent(_config.EVENTS.CLOSE_THANKYOU_WINDOW,{'info':'attempted to close thank you window'})}}
function checkButtonState(){var buttonState=0;if(_config.EMBEDDED_BUTTON_INFO&&_config.EMBEDDED_BUTTON_INFO.id&&lpTag.taglets.rendererStub.getEngagementState(_config.EMBEDDED_BUTTON_INFO.id)){buttonState=lpTag.taglets.rendererStub.getEngagementState(_config.EMBEDDED_BUTTON_INFO.id).state}
return buttonState}
function agentsAreAvailable(){return checkButtonState()==BUTTON_STATES.ONLINE?!0:!1}
function agentsAreBusy(){return checkButtonState()==BUTTON_STATES.BUSY?!0:!1}
function agentsAreOffline(){return checkButtonState()==BUTTON_STATES.OFFLINE?!0:!1}
function startChat(conversationSoFar){var preChatLines=conversationSoFar||[];var state=checkButtonState();if((state==BUTTON_STATES.BUSY&&_config.TRIGGER_CHAT_BUTTON_FROM_BUSY_STATE)||(state==BUTTON_STATES.OFFLINE&&_config.TRIGGER_CHAT_BUTTON_FROM_OFFLINE_STATE)||(state==BUTTON_STATES.ONLINE)){triggerChatButtonClick(preChatLines)}else{return!1}}
function injectLivePersonEmbeddedButtonContainer(){if(!document.getElementById(_config.EMBEDDED_BUTTON_DIV_CONTAINER_ID)){var buttonContainer=document.getElementById('button-container');var buttonDiv=document.createElement('div');buttonDiv.id=_config.EMBEDDED_BUTTON_DIV_CONTAINER_ID;buttonContainer.appendChild(buttonDiv);var sdes=[{'type':'pagediv','divId':_config.EMBEDDED_BUTTON_DIV_CONTAINER_ID}];_log('injectButtonContainerId',{'sdes':sdes,'buttonContainer':buttonContainer,'buttonDiv':buttonDiv,});if(lpTag&&lpTag.sdes&&lpTag.sdes.send){lpTag.sdes.send(sdes)}else if(lpTag&&lpTag.sdes.push){lpTag.sdes.push(sdes)}}}
function getEventLog(){return _eventLog}
return{version:_version,start:_init,init:_init,reset:_reset,injectButtonContainer:injectLivePersonEmbeddedButtonContainer,escalateToChat:startChat,startChat:startChat,agentsAreAvailable:agentsAreAvailable,agentsAreBusy:agentsAreBusy,agentsAreOffline:agentsAreOffline,getActiveButton:getActiveButton,getEventLog:getEventLog,returnCurrentLanguageValueIfSupported:getCurrentLanguageSelection,getCountry:getCountrySelection,supportedLanguages:_supportedLanguages}})()